// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PeopleGen.Dal;

namespace PeopleGen.Dal.Migrations
{
    [DbContext(typeof(PeopleDbContext))]
    partial class PeopleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("PeopleGen.Core.Business", b =>
                {
                    b.Property<int>("BusinessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("BusinessOwnerPersonId")
                        .HasColumnType("integer");

                    b.Property<string>("BusinessType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<int?>("CivilizationCityId")
                        .HasColumnType("integer");

                    b.Property<int?>("InventoryId")
                        .HasColumnType("integer");

                    b.Property<int>("NumOfEmployees")
                        .HasColumnType("integer");

                    b.HasKey("BusinessId");

                    b.HasIndex("BusinessOwnerPersonId");

                    b.HasIndex("CivilizationCityId");

                    b.HasIndex("InventoryId");

                    b.ToTable("Business");
                });

            modelBuilder.Entity("PeopleGen.Core.Civilization", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ideology")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TypeOfRule")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CityId");

                    b.ToTable("Civilization");
                });

            modelBuilder.Entity("PeopleGen.Core.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("InventoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InventoryType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsCursed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMagical")
                        .HasColumnType("boolean");

                    b.Property<string>("MoneyType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("InventoryId");

                    b.ToTable("Inventory");

                    b.HasData(
                        new
                        {
                            InventoryId = 1,
                            InventoryName = "Sickle",
                            InventoryType = "Weapon",
                            IsCursed = false,
                            IsMagical = false,
                            MoneyType = "Copper",
                            Price = "50"
                        },
                        new
                        {
                            InventoryId = 2,
                            InventoryName = "Shortbow",
                            InventoryType = "Weapon",
                            IsCursed = false,
                            IsMagical = false,
                            MoneyType = "Copper",
                            Price = "75"
                        },
                        new
                        {
                            InventoryId = 3,
                            InventoryName = "Greatsword",
                            InventoryType = "Weapon",
                            IsCursed = false,
                            IsMagical = false,
                            MoneyType = "Copper",
                            Price = "150"
                        },
                        new
                        {
                            InventoryId = 4,
                            InventoryName = "Battleaxe",
                            InventoryType = "Weapon",
                            IsCursed = false,
                            IsMagical = false,
                            MoneyType = "Copper",
                            Price = "65"
                        },
                        new
                        {
                            InventoryId = 5,
                            InventoryName = "Longsword",
                            InventoryType = "Weapon",
                            IsCursed = false,
                            IsMagical = false,
                            MoneyType = "Copper",
                            Price = "5"
                        },
                        new
                        {
                            InventoryId = 6,
                            InventoryName = "padded",
                            InventoryType = "Armor",
                            IsCursed = false,
                            IsMagical = false,
                            MoneyType = "Copper",
                            Price = "150"
                        },
                        new
                        {
                            InventoryId = 7,
                            InventoryName = "Studded leather",
                            InventoryType = "Armor",
                            IsCursed = false,
                            IsMagical = false,
                            MoneyType = "Copper",
                            Price = "510"
                        },
                        new
                        {
                            InventoryId = 8,
                            InventoryName = "Half Plate",
                            InventoryType = "Armor",
                            IsCursed = false,
                            IsMagical = false,
                            MoneyType = "Copper",
                            Price = "1550"
                        },
                        new
                        {
                            InventoryId = 9,
                            InventoryName = "Plate",
                            InventoryType = "Armor",
                            IsCursed = false,
                            IsMagical = false,
                            MoneyType = "Copper",
                            Price = "15510"
                        },
                        new
                        {
                            InventoryId = 10,
                            InventoryName = "shield",
                            InventoryType = "Armor",
                            IsCursed = false,
                            IsMagical = false,
                            MoneyType = "Copper",
                            Price = "100"
                        },
                        new
                        {
                            InventoryId = 11,
                            InventoryName = "Ration",
                            InventoryType = "General",
                            IsCursed = false,
                            IsMagical = false,
                            MoneyType = "Copper",
                            Price = "5"
                        },
                        new
                        {
                            InventoryId = 12,
                            InventoryName = "Disquise Kit",
                            InventoryType = "General",
                            IsCursed = false,
                            IsMagical = false,
                            MoneyType = "Copper",
                            Price = "500"
                        },
                        new
                        {
                            InventoryId = 13,
                            InventoryName = "Play card",
                            InventoryType = "General",
                            IsCursed = false,
                            IsMagical = false,
                            MoneyType = "Copper",
                            Price = "150"
                        },
                        new
                        {
                            InventoryId = 14,
                            InventoryName = "Flute",
                            InventoryType = "General",
                            IsCursed = false,
                            IsMagical = false,
                            MoneyType = "Copper",
                            Price = "75"
                        },
                        new
                        {
                            InventoryId = 15,
                            InventoryName = "Horse",
                            InventoryType = "General",
                            IsCursed = false,
                            IsMagical = false,
                            MoneyType = "Copper",
                            Price = "1500"
                        });
                });

            modelBuilder.Entity("PeopleGen.Core.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Alignment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Charisma")
                        .HasColumnType("integer");

                    b.Property<int?>("CityId")
                        .HasColumnType("integer");

                    b.Property<int>("Constitution")
                        .HasColumnType("integer");

                    b.Property<int>("Dexterity")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Intelligence")
                        .HasColumnType("integer");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PersonalityStrength")
                        .HasColumnType("text");

                    b.Property<string>("SpeciesName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Strength")
                        .HasColumnType("integer");

                    b.Property<int>("Wisdom")
                        .HasColumnType("integer");

                    b.HasKey("PersonId");

                    b.HasIndex("CityId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("PeopleGen.Core.Business", b =>
                {
                    b.HasOne("PeopleGen.Core.Person", "BusinessOwner")
                        .WithMany()
                        .HasForeignKey("BusinessOwnerPersonId");

                    b.HasOne("PeopleGen.Core.Civilization", "Civilization")
                        .WithMany("Businesses")
                        .HasForeignKey("CivilizationCityId");

                    b.HasOne("PeopleGen.Core.Inventory", null)
                        .WithMany("business")
                        .HasForeignKey("InventoryId");

                    b.Navigation("BusinessOwner");

                    b.Navigation("Civilization");
                });

            modelBuilder.Entity("PeopleGen.Core.Person", b =>
                {
                    b.HasOne("PeopleGen.Core.Civilization", "City")
                        .WithMany("Population")
                        .HasForeignKey("CityId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("PeopleGen.Core.Civilization", b =>
                {
                    b.Navigation("Businesses");

                    b.Navigation("Population");
                });

            modelBuilder.Entity("PeopleGen.Core.Inventory", b =>
                {
                    b.Navigation("business");
                });
#pragma warning restore 612, 618
        }
    }
}
